{"ast":null,"code":"var _jsxFileName = \"/Users/haducthanhvien/Documents/note/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const handleLogin = event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          name: \"Username\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          name: \"Password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xZn/CAyAHCP+Soi+1wOqWz+T9+c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Note","Notification","Footer","noteService","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","important","Math","random","create","returnedNote","concat","handleNoteChange","target","value","handleLogin","console","log","notesToShow","filter","note","toggleImportanceOf","id","find","n","changedNote","update","map","catch","error","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onSubmit","type","name","onChange","_ref","_ref2","onClick","toggleImportance","_c","$RefreshReg$"],"sources":["/Users/haducthanhvien/Documents/note/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n  const handleLogin = (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n  }\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n   const toggleImportanceOf = id => {\n      const note = notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n  \n      noteService\n        .update(id, changedNote).then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNotes(notes.filter(n => n.id !== id))\n        })\n    }\n\n  return (\n    <div>\n      <h1>Notes app</h1>\n      <Notification message={errorMessage} />\n\n      <form onSubmit = {handleLogin}>\n        <div>\n          username\n            <input\n            type = \"text\"\n            value = {username}\n            name = \"Username\"\n            onChange = {({target}) => setUsername(target.value)}\n            />\n        </div>\n        <div>\n          password\n          <input\n          type = \"password\"\n          value = {password}\n          name = \"Password\"\n          onChange = {({target}) => setPassword(target.value)}\n          />\n        </div>\n      </form>\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div> \n      <ul>\n        <ul>\n          {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note}\n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}